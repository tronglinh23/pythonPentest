import Account
import unittest
from datetime import date, timedelta

class TestCalculateDeposit(unittest.TestCase):
  # 1 – 2 (F) – 5 Testcase: deposit(-100) -> False
  def testcase1(self):
    account = Account.Account(5,"linh",1000,date.today())
    amount = -100
    res = account.withdraw(amount)
    self.assertEqual(res, False)
  
  # 1 – 2 (T) – 3 – 4  Testcase: deposit(100) -> Expected: 1100
  def testcase2(self):
    account = Account.Account(5,"linh",1000,date.today())
    amount = 100
    res1 = account.deposit(amount)
    self.assertEqual(res1, 1100)   
    
    
class TestCalculateWithdraw(unittest.TestCase):
  #1 – 2(T) – 3 – 4 : withdraw(500) -> Expected = 500  
  def testcase1(self):
    account = Account.Account(5,"linh",1000,date.today())
    amount = 500
    res = account.withdraw(amount)
    self.assertEqual(res, 500)
  
  # 1 – 2(F) – 5 : withdraw(1500) -> Expected = False
  def testcase2(self):
    account = Account.Account(5,"linh",1000,date.today())
    amount = 1500
    res1 = account.withdraw(amount)
    self.assertEqual(res1, False) 
    
  #1  – 2(F) – 5 : withdraw(0) -> Expected = False
  def testcase3(self):
    account = Account.Account(5,"linh",1000,date.today())
    amount = 0
    res1 = account.withdraw(amount)
    self.assertEqual(res1, False)   
    
  
  
if __name__ == "__main__":
  unittest.main()